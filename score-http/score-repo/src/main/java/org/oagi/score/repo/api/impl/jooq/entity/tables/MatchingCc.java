/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.repo.api.impl.jooq.entity.tables;


import java.util.Collection;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.oagi.score.repo.api.impl.jooq.entity.Oagi;
import org.oagi.score.repo.api.impl.jooq.entity.tables.records.MatchingCcRecord;


/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MatchingCc extends TableImpl<MatchingCcRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>oagi.matching_cc</code>
     */
    public static final MatchingCc MATCHING_CC = new MatchingCc();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MatchingCcRecord> getRecordType() {
        return MatchingCcRecord.class;
    }

    /**
     * The column <code>oagi.matching_cc.source_spec</code>.
     */
    public final TableField<MatchingCcRecord, String> SOURCE_SPEC = createField(DSL.name("source_spec"), SQLDataType.VARCHAR(286).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>oagi.matching_cc.target_spec</code>.
     */
    public final TableField<MatchingCcRecord, String> TARGET_SPEC = createField(DSL.name("target_spec"), SQLDataType.VARCHAR(286).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>oagi.matching_cc.super_bcc_id</code>.
     */
    public final TableField<MatchingCcRecord, Long> SUPER_BCC_ID = createField(DSL.name("super_bcc_id"), SQLDataType.BIGINT.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.BIGINT)), this, "");

    private MatchingCc(Name alias, Table<MatchingCcRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private MatchingCc(Name alias, Table<MatchingCcRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"), TableOptions.view("create view `matching_cc` as select concat(concat(`f1`.`object_class_term`,'. '),`f1`.`property`) AS `source_spec`,concat(concat(`f2`.`object_class_term`,'. '),`f2`.`property`) AS `target_spec`,`f1`.`super_bcc_id` AS `super_bcc_id` from ((select `flat_bcc_view_2`.`object_class_term` AS `object_class_term`,`flat_bcc_view_2`.`property` AS `property`,`flat_bcc_view_2`.`super_bcc_id` AS `super_bcc_id` from `oagi`.`flat_bcc_view_2` where `flat_bcc_view_2`.`object_class_term` = 'Test Results') `f2` left join (select `flat_bcc_view_2`.`object_class_term` AS `object_class_term`,`flat_bcc_view_2`.`property` AS `property`,`flat_bcc_view_2`.`super_bcc_id` AS `super_bcc_id` from `oagi`.`flat_bcc_view_2` where `flat_bcc_view_2`.`object_class_term` = 'ResultsType') `f1` on(`f1`.`super_bcc_id` = `f2`.`super_bcc_id`)) union select concat(concat(`f1`.`object_class_term`,'. '),`f1`.`property`) AS `source_spec`,concat(concat(`f2`.`object_class_term`,'. '),`f2`.`property`) AS `target_spec`,`f1`.`super_bcc_id` AS `super_bcc_id` from ((select `flat_bcc_view_2`.`object_class_term` AS `object_class_term`,`flat_bcc_view_2`.`property` AS `property`,`flat_bcc_view_2`.`super_bcc_id` AS `super_bcc_id` from `oagi`.`flat_bcc_view_2` where `flat_bcc_view_2`.`object_class_term` = 'ResultsType') `f1` left join (select `flat_bcc_view_2`.`object_class_term` AS `object_class_term`,`flat_bcc_view_2`.`property` AS `property`,`flat_bcc_view_2`.`super_bcc_id` AS `super_bcc_id` from `oagi`.`flat_bcc_view_2` where `flat_bcc_view_2`.`object_class_term` = 'Test Results') `f2` on(`f1`.`super_bcc_id` = `f2`.`super_bcc_id`))"), where);
    }

    /**
     * Create an aliased <code>oagi.matching_cc</code> table reference
     */
    public MatchingCc(String alias) {
        this(DSL.name(alias), MATCHING_CC);
    }

    /**
     * Create an aliased <code>oagi.matching_cc</code> table reference
     */
    public MatchingCc(Name alias) {
        this(alias, MATCHING_CC);
    }

    /**
     * Create a <code>oagi.matching_cc</code> table reference
     */
    public MatchingCc() {
        this(DSL.name("matching_cc"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Oagi.OAGI;
    }

    @Override
    public MatchingCc as(String alias) {
        return new MatchingCc(DSL.name(alias), this);
    }

    @Override
    public MatchingCc as(Name alias) {
        return new MatchingCc(alias, this);
    }

    @Override
    public MatchingCc as(Table<?> alias) {
        return new MatchingCc(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public MatchingCc rename(String name) {
        return new MatchingCc(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MatchingCc rename(Name name) {
        return new MatchingCc(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public MatchingCc rename(Table<?> name) {
        return new MatchingCc(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public MatchingCc where(Condition condition) {
        return new MatchingCc(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public MatchingCc where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public MatchingCc where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public MatchingCc where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public MatchingCc where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public MatchingCc where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public MatchingCc where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public MatchingCc where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public MatchingCc whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public MatchingCc whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
