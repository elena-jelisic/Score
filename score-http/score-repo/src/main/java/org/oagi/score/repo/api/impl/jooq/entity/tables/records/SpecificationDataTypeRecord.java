/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.repo.api.impl.jooq.entity.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;
import org.oagi.score.repo.api.impl.jooq.entity.tables.SpecificationDataType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpecificationDataTypeRecord extends UpdatableRecordImpl<SpecificationDataTypeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oagi.specification_data_type.data_type_id</code>.
     */
    public void setDataTypeId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>oagi.specification_data_type.data_type_id</code>.
     */
    public Long getDataTypeId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>oagi.specification_data_type.data_type_name</code>.
     */
    public void setDataTypeName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>oagi.specification_data_type.data_type_name</code>.
     */
    public String getDataTypeName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>oagi.specification_data_type.definition</code>.
     */
    public void setDefinition(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>oagi.specification_data_type.definition</code>.
     */
    public String getDefinition() {
        return (String) get(2);
    }

    /**
     * Setter for <code>oagi.specification_data_type.status_code_id</code>.
     */
    public void setStatusCodeId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>oagi.specification_data_type.status_code_id</code>.
     */
    public Long getStatusCodeId() {
        return (Long) get(3);
    }

    /**
     * Setter for
     * <code>oagi.specification_data_type.gap_analysis_code_id</code>.
     */
    public void setGapAnalysisCodeId(Long value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>oagi.specification_data_type.gap_analysis_code_id</code>.
     */
    public Long getGapAnalysisCodeId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>oagi.specification_data_type.dt_id</code>.
     */
    public void setDtId(ULong value) {
        set(5, value);
    }

    /**
     * Getter for <code>oagi.specification_data_type.dt_id</code>.
     */
    public ULong getDtId() {
        return (ULong) get(5);
    }

    /**
     * Setter for <code>oagi.specification_data_type.is_approved</code>.
     */
    public void setIsApproved(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>oagi.specification_data_type.is_approved</code>.
     */
    public Byte getIsApproved() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>oagi.specification_data_type.specification_id</code>.
     */
    public void setSpecificationId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>oagi.specification_data_type.specification_id</code>.
     */
    public Long getSpecificationId() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SpecificationDataTypeRecord
     */
    public SpecificationDataTypeRecord() {
        super(SpecificationDataType.SPECIFICATION_DATA_TYPE);
    }

    /**
     * Create a detached, initialised SpecificationDataTypeRecord
     */
    public SpecificationDataTypeRecord(Long dataTypeId, String dataTypeName, String definition, Long statusCodeId, Long gapAnalysisCodeId, ULong dtId, Byte isApproved, Long specificationId) {
        super(SpecificationDataType.SPECIFICATION_DATA_TYPE);

        setDataTypeId(dataTypeId);
        setDataTypeName(dataTypeName);
        setDefinition(definition);
        setStatusCodeId(statusCodeId);
        setGapAnalysisCodeId(gapAnalysisCodeId);
        setDtId(dtId);
        setIsApproved(isApproved);
        setSpecificationId(specificationId);
        resetChangedOnNotNull();
    }
}
