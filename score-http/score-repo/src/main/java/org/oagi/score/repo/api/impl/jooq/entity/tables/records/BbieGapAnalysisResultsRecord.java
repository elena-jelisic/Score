/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.repo.api.impl.jooq.entity.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.oagi.score.repo.api.impl.jooq.entity.tables.BbieGapAnalysisResults;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BbieGapAnalysisResultsRecord extends UpdatableRecordImpl<BbieGapAnalysisResultsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oagi.bbie_gap_analysis_results.result_id</code>.
     */
    public void setResultId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>oagi.bbie_gap_analysis_results.result_id</code>.
     */
    public Long getResultId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>oagi.bbie_gap_analysis_results.from_gap_analysis_id</code>.
     */
    public void setFromGapAnalysisId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>oagi.bbie_gap_analysis_results.from_gap_analysis_id</code>.
     */
    public Long getFromGapAnalysisId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>oagi.bbie_gap_analysis_results.source_bbie_id</code>.
     */
    public void setSourceBbieId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>oagi.bbie_gap_analysis_results.source_bbie_id</code>.
     */
    public Long getSourceBbieId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>oagi.bbie_gap_analysis_results.target_bbie_id</code>.
     */
    public void setTargetBbieId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>oagi.bbie_gap_analysis_results.target_bbie_id</code>.
     */
    public Long getTargetBbieId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>oagi.bbie_gap_analysis_results.status_id</code>.
     */
    public void setStatusId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>oagi.bbie_gap_analysis_results.status_id</code>.
     */
    public Long getStatusId() {
        return (Long) get(4);
    }

    /**
     * Setter for
     * <code>oagi.bbie_gap_analysis_results.constraint_analysis_result</code>.
     */
    public void setConstraintAnalysisResult(Long value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>oagi.bbie_gap_analysis_results.constraint_analysis_result</code>.
     */
    public Long getConstraintAnalysisResult() {
        return (Long) get(5);
    }

    /**
     * Setter for
     * <code>oagi.bbie_gap_analysis_results.mapping_specification_id</code>.
     */
    public void setMappingSpecificationId(Long value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>oagi.bbie_gap_analysis_results.mapping_specification_id</code>.
     */
    public Long getMappingSpecificationId() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BbieGapAnalysisResultsRecord
     */
    public BbieGapAnalysisResultsRecord() {
        super(BbieGapAnalysisResults.BBIE_GAP_ANALYSIS_RESULTS);
    }

    /**
     * Create a detached, initialised BbieGapAnalysisResultsRecord
     */
    public BbieGapAnalysisResultsRecord(Long resultId, Long fromGapAnalysisId, Long sourceBbieId, Long targetBbieId, Long statusId, Long constraintAnalysisResult, Long mappingSpecificationId) {
        super(BbieGapAnalysisResults.BBIE_GAP_ANALYSIS_RESULTS);

        setResultId(resultId);
        setFromGapAnalysisId(fromGapAnalysisId);
        setSourceBbieId(sourceBbieId);
        setTargetBbieId(targetBbieId);
        setStatusId(statusId);
        setConstraintAnalysisResult(constraintAnalysisResult);
        setMappingSpecificationId(mappingSpecificationId);
        resetChangedOnNotNull();
    }
}
